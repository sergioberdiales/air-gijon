services:
  - type: web
    name: air-gijon
    env: node
    plan: free
    buildCommand: npm install
    startCommand: npm start
    healthCheckPath: /
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: air-gijon-db
          property: connectionString
      - key: AQICN_API_KEY
        sync: false
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASS
        sync: false

  # Cron job para actualizar datos cada hora
  - type: cron
    name: data-update
    env: node
    schedule: "0 * * * *"  # Cada hora en punto
    buildCommand: npm install
    startCommand: node scripts/cron/cron_update.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: air-gijon-db
          property: connectionString
      - key: AQICN_API_KEY
        sync: false

  # Cron job para enviar predicciones diarias
  - type: cron
    name: daily-predictions
    env: node
    schedule: "0 8 * * *"  # Todos los d√≠as a las 8:00 AM
    buildCommand: npm install
    startCommand: node scripts/cron/send_daily_predictions.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: air-gijon-db
          property: connectionString
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASS
        sync: false

  # Cron job para alertas de PM2.5 alto
  - type: cron
    name: hourly-alerts
    env: node
    schedule: "0 * * * *"  # Cada hora para verificar alertas
    buildCommand: npm install
    startCommand: node scripts/cron/send_hourly_alerts.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: air-gijon-db
          property: connectionString
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASS
        sync: false

databases:
  - name: air-gijon-db
    databaseName: air_gijon
    user: air_gijon_user 